{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gowng\\\\Downloads\\\\ohDog\\\\src\\\\components\\\\Maps.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Map, MapMarker } from 'react-kakao-maps-sdk'; // import '../css/map.scss';\n\nimport '../css/map.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  kakao\n} = window;\n\nfunction Maps() {\n  _s();\n\n  const [state, setState] = useState({\n    // 지도의 초기 위치\n    center: {\n      lat: 37.49676871972202,\n      lng: 127.02474726969814\n    },\n    // 지도 위치 변경시 panto를 이용할지(부드럽게 이동)\n    isPanto: true\n  });\n  const [searchAddress, SetSearchAddress] = useState();\n  const [info, setInfo] = useState();\n  const [markers, setMarkers] = useState([]);\n  const [map, setMap] = useState();\n  const oneRef = useRef();\n  const twoRef = useRef();\n  const threeRef = useRef();\n  const fourRef = useRef(); // 주소 입력후 검색 클릭 시 원하는 주소로 이동\n\n  const SearchMap = () => {\n    const geocoder = new kakao.maps.services.Geocoder();\n\n    let callback = function (result, status) {\n      if (status === kakao.maps.services.Status.OK) {\n        const newSearch = result[0];\n        setState({\n          center: {\n            lat: newSearch.y,\n            lng: newSearch.x\n          }\n        });\n      }\n    };\n\n    geocoder.addressSearch(`${searchAddress}`, callback, {\n      location: 'center',\n      sort: kakao.maps.services.SortBy.DISTANCE\n    });\n  };\n\n  const handleSearchAddress = e => {\n    SetSearchAddress(e.target.value);\n  };\n\n  const setCategory = e => {\n    if (e.target.name == '주변 애견 카페') {\n      var keywords = '';\n      keywords = oneRef.current.name; // console.log(oneRef.current.name);\n\n      return SearchCategory(keywords);\n    } else if (e.target.name == '주변 동물 병원') {\n      keywords = twoRef.current.name; // console.log(twoRef.current.name);\n\n      return SearchCategory(keywords);\n    } else if (e.target.name == '주변 애견 미용실') {\n      keywords = threeRef.current.name; // console.log(threeRef.current.name);\n\n      return SearchCategory(keywords);\n    } else if (e.target.name == '주변 애견동반 식당') {\n      keywords = fourRef.current.name; // console.log(fourRef.current.name);\n\n      return SearchCategory(keywords);\n    }\n  };\n\n  const SearchCategory = keywords => {\n    const ps = new kakao.maps.services.Places();\n\n    const placesSearchCB = function (data, status, pagination) {\n      if (status === kakao.maps.services.Status.OK) {\n        // const newSearch = data[0];\n        // setState({\n        //   center: { lat: newSearch.y, lng: newSearch.x },\n        // });\n        // const bounds = new kakao.maps.LatLngBounds();\n        let markers = [];\n\n        for (var i = 0; i < data.length; i++) {\n          markers.push({\n            position: {\n              lat: data[i].y,\n              lng: data[i].x\n            },\n            content: data[i].place_name\n          }); // bounds.extend(new kakao.maps.LatLng(data[i].y, data[i].x));\n        }\n\n        setMarkers(markers); // map.setBounds(bounds);\n      }\n    };\n\n    ps.keywordSearch(keywords, placesSearchCB);\n  }; // useEffect(() => {\n  //     if (!map) return;\n  //     const ps = new kakao.maps.services.Places();\n  //     ps.keywordSearch('이태원 맛집', (data, status, _pagination) => {\n  //       if (status === kakao.maps.services.Status.OK) {\n  //         // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\n  //         // LatLngBounds 객체에 좌표를 추가합니다\n  //         const bounds = new kakao.maps.LatLngBounds();\n  //         let markers = [];\n  //         for (var i = 0; i < data.length; i++) {\n  //           // @ts-ignore\n  //           markers.push({\n  //             position: {\n  //               lat: data[i].y,\n  //               lng: data[i].x,\n  //             },\n  //             content: data[i].place_name,\n  //           });\n  //           // @ts-ignore\n  //           bounds.extend(new kakao.maps.LatLng(data[i].y, data[i].x));\n  //         }\n  //         setMarkers(markers);\n  //         // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다\n  //         map.setBounds(bounds);\n  //       }\n  //     });\n  //   }, [map]);\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleSearchAddress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        placeholder: \"\\uD604\\uC7AC \\uC704\\uCE58\\uB97C \\uC785\\uB825\\uD558\\uC5EC \\uC8FC\\uC138\\uC694\",\n        onClick: SearchMap,\n        children: \"\\uAC80\\uC0C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          name: \"\\uC8FC\\uBCC0 \\uC560\\uACAC \\uCE74\\uD398\",\n          value: \"\\uCE74\\uD398\",\n          ref: oneRef,\n          onClick: setCategory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          name: \"\\uC8FC\\uBCC0 \\uB3D9\\uBB3C \\uBCD1\\uC6D0\",\n          value: \"\\uBCD1\\uC6D0\",\n          ref: twoRef,\n          onClick: setCategory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          name: \"\\uC8FC\\uBCC0 \\uC560\\uACAC \\uBBF8\\uC6A9\\uC2E4\",\n          value: \"\\uBBF8\\uC6A9\\uC2E4\",\n          ref: threeRef,\n          onClick: setCategory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          name: \"\\uC8FC\\uBCC0 \\uC560\\uACAC\\uB3D9\\uBC18 \\uC2DD\\uB2F9\",\n          value: \"\\uC2DD\\uB2F9\",\n          ref: fourRef,\n          onClick: setCategory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Map // 지도를 표시할 Container\n    , {\n      center: state.center,\n      isPanto: state.isPanto,\n      style: {\n        // 지도의 크기\n        width: '100%',\n        height: '450px'\n      },\n      level: 3,\n      children: markers.map(marker => /*#__PURE__*/_jsxDEV(MapMarker, {\n        position: marker.position,\n        onClick: () => setInfo(marker),\n        children: info && info.content === marker.content && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: '#000'\n          },\n          children: marker.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 15\n        }, this)\n      }, `marker-${marker.content}-${marker.position.lat},${marker.position.lng}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Maps, \"pc5upIhGz7ydji+IyMEJkKvjViU=\");\n\n_c = Maps;\nexport default Maps;\n\nvar _c;\n\n$RefreshReg$(_c, \"Maps\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Map","MapMarker","kakao","window","Maps","state","setState","center","lat","lng","isPanto","searchAddress","SetSearchAddress","info","setInfo","markers","setMarkers","map","setMap","oneRef","twoRef","threeRef","fourRef","SearchMap","geocoder","maps","services","Geocoder","callback","result","status","Status","OK","newSearch","y","x","addressSearch","location","sort","SortBy","DISTANCE","handleSearchAddress","e","target","value","setCategory","name","keywords","current","SearchCategory","ps","Places","placesSearchCB","data","pagination","i","length","push","position","content","place_name","keywordSearch","width","height","marker","color"],"sources":["C:/Users/gowng/Downloads/ohDog/src/components/Maps.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { Map, MapMarker } from 'react-kakao-maps-sdk';\r\n// import '../css/map.scss';\r\nimport '../css/map.css';\r\nconst { kakao } = window;\r\n\r\nfunction Maps() {\r\n  const [state, setState] = useState({\r\n    // 지도의 초기 위치\r\n    center: { lat: 37.49676871972202, lng: 127.02474726969814 },\r\n    // 지도 위치 변경시 panto를 이용할지(부드럽게 이동)\r\n    isPanto: true,\r\n  });\r\n  const [searchAddress, SetSearchAddress] = useState();\r\n  const [info, setInfo] = useState();\r\n  const [markers, setMarkers] = useState([]);\r\n  const [map, setMap] = useState();\r\n  const oneRef = useRef();\r\n  const twoRef = useRef();\r\n  const threeRef = useRef();\r\n  const fourRef = useRef();\r\n\r\n  // 주소 입력후 검색 클릭 시 원하는 주소로 이동\r\n  const SearchMap = () => {\r\n    const geocoder = new kakao.maps.services.Geocoder();\r\n\r\n    let callback = function (result, status) {\r\n      if (status === kakao.maps.services.Status.OK) {\r\n        const newSearch = result[0];\r\n        setState({\r\n          center: { lat: newSearch.y, lng: newSearch.x },\r\n        });\r\n      }\r\n    };\r\n    geocoder.addressSearch(`${searchAddress}`, callback, {\r\n      location: 'center',\r\n      sort: kakao.maps.services.SortBy.DISTANCE,\r\n    });\r\n  };\r\n\r\n  const handleSearchAddress = (e) => {\r\n    SetSearchAddress(e.target.value);\r\n  };\r\n\r\n  const setCategory = (e) => {\r\n    if (e.target.name == '주변 애견 카페') {\r\n      var keywords = '';\r\n      keywords = oneRef.current.name;\r\n      // console.log(oneRef.current.name);\r\n      return SearchCategory(keywords);\r\n    } else if (e.target.name == '주변 동물 병원') {\r\n      keywords = twoRef.current.name;\r\n      // console.log(twoRef.current.name);\r\n      return SearchCategory(keywords);\r\n    } else if (e.target.name == '주변 애견 미용실') {\r\n      keywords = threeRef.current.name;\r\n      // console.log(threeRef.current.name);\r\n      return SearchCategory(keywords);\r\n    } else if (e.target.name == '주변 애견동반 식당') {\r\n      keywords = fourRef.current.name;\r\n      // console.log(fourRef.current.name);\r\n      return SearchCategory(keywords);\r\n    }\r\n  };\r\n\r\n  const SearchCategory = (keywords) => {\r\n    const ps = new kakao.maps.services.Places();\r\n    const placesSearchCB = function (data, status, pagination) {\r\n      if (status === kakao.maps.services.Status.OK) {\r\n        // const newSearch = data[0];\r\n        // setState({\r\n        //   center: { lat: newSearch.y, lng: newSearch.x },\r\n        // });\r\n        // const bounds = new kakao.maps.LatLngBounds();\r\n        let markers = [];\r\n\r\n        for (var i = 0; i < data.length; i++) {\r\n          markers.push({\r\n            position: {\r\n              lat: data[i].y,\r\n              lng: data[i].x,\r\n            },\r\n            content: data[i].place_name,\r\n          });\r\n          // bounds.extend(new kakao.maps.LatLng(data[i].y, data[i].x));\r\n        }\r\n        setMarkers(markers);\r\n        // map.setBounds(bounds);\r\n      }\r\n    };\r\n    ps.keywordSearch(keywords, placesSearchCB);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //     if (!map) return;\r\n  //     const ps = new kakao.maps.services.Places();\r\n\r\n  //     ps.keywordSearch('이태원 맛집', (data, status, _pagination) => {\r\n  //       if (status === kakao.maps.services.Status.OK) {\r\n  //         // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\r\n  //         // LatLngBounds 객체에 좌표를 추가합니다\r\n  //         const bounds = new kakao.maps.LatLngBounds();\r\n  //         let markers = [];\r\n\r\n  //         for (var i = 0; i < data.length; i++) {\r\n  //           // @ts-ignore\r\n  //           markers.push({\r\n  //             position: {\r\n  //               lat: data[i].y,\r\n  //               lng: data[i].x,\r\n  //             },\r\n  //             content: data[i].place_name,\r\n  //           });\r\n  //           // @ts-ignore\r\n  //           bounds.extend(new kakao.maps.LatLng(data[i].y, data[i].x));\r\n  //         }\r\n  //         setMarkers(markers);\r\n\r\n  //         // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다\r\n  //         map.setBounds(bounds);\r\n  //       }\r\n  //     });\r\n  //   }, [map]);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <input onChange={handleSearchAddress}></input>\r\n        <button placeholder=\"현재 위치를 입력하여 주세요\" onClick={SearchMap}>\r\n          검색\r\n        </button>\r\n        <div>\r\n          <input\r\n            type=\"button\"\r\n            name=\"주변 애견 카페\"\r\n            value=\"카페\"\r\n            ref={oneRef}\r\n            onClick={setCategory}\r\n          />\r\n          <input\r\n            type=\"button\"\r\n            name=\"주변 동물 병원\"\r\n            value=\"병원\"\r\n            ref={twoRef}\r\n            onClick={setCategory}\r\n          />\r\n          <input\r\n            type=\"button\"\r\n            name=\"주변 애견 미용실\"\r\n            value=\"미용실\"\r\n            ref={threeRef}\r\n            onClick={setCategory}\r\n          />\r\n          <input\r\n            type=\"button\"\r\n            name=\"주변 애견동반 식당\"\r\n            value=\"식당\"\r\n            ref={fourRef}\r\n            onClick={setCategory}\r\n          />\r\n        </div>\r\n      </div>\r\n      <Map // 지도를 표시할 Container\r\n        center={state.center}\r\n        isPanto={state.isPanto}\r\n        style={{\r\n          // 지도의 크기\r\n          width: '100%',\r\n          height: '450px',\r\n        }}\r\n        level={3}\r\n      >\r\n        {/* <MapMarker position={state.center}>\r\n          <div\r\n            style={{\r\n              color: '#000',\r\n            }}\r\n          >\r\n            검색위치\r\n          </div>\r\n        </MapMarker> */}\r\n        {markers.map((marker) => (\r\n          <MapMarker\r\n            key={`marker-${marker.content}-${marker.position.lat},${marker.position.lng}`}\r\n            position={marker.position}\r\n            onClick={() => setInfo(marker)}\r\n          >\r\n            {info && info.content === marker.content && (\r\n              <div style={{ color: '#000' }}>{marker.content}</div>\r\n            )}\r\n          </MapMarker>\r\n        ))}\r\n      </Map>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Maps;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,GAAT,EAAcC,SAAd,QAA+B,sBAA/B,C,CACA;;AACA,OAAO,gBAAP;;;AACA,MAAM;EAAEC;AAAF,IAAYC,MAAlB;;AAEA,SAASC,IAAT,GAAgB;EAAA;;EACd,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC;IACjC;IACAQ,MAAM,EAAE;MAAEC,GAAG,EAAE,iBAAP;MAA0BC,GAAG,EAAE;IAA/B,CAFyB;IAGjC;IACAC,OAAO,EAAE;EAJwB,CAAD,CAAlC;EAMA,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,EAAlD;EACA,MAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,EAAhC;EACA,MAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACkB,GAAD,EAAMC,MAAN,IAAgBnB,QAAQ,EAA9B;EACA,MAAMoB,MAAM,GAAGrB,MAAM,EAArB;EACA,MAAMsB,MAAM,GAAGtB,MAAM,EAArB;EACA,MAAMuB,QAAQ,GAAGvB,MAAM,EAAvB;EACA,MAAMwB,OAAO,GAAGxB,MAAM,EAAtB,CAdc,CAgBd;;EACA,MAAMyB,SAAS,GAAG,MAAM;IACtB,MAAMC,QAAQ,GAAG,IAAItB,KAAK,CAACuB,IAAN,CAAWC,QAAX,CAAoBC,QAAxB,EAAjB;;IAEA,IAAIC,QAAQ,GAAG,UAAUC,MAAV,EAAkBC,MAAlB,EAA0B;MACvC,IAAIA,MAAM,KAAK5B,KAAK,CAACuB,IAAN,CAAWC,QAAX,CAAoBK,MAApB,CAA2BC,EAA1C,EAA8C;QAC5C,MAAMC,SAAS,GAAGJ,MAAM,CAAC,CAAD,CAAxB;QACAvB,QAAQ,CAAC;UACPC,MAAM,EAAE;YAAEC,GAAG,EAAEyB,SAAS,CAACC,CAAjB;YAAoBzB,GAAG,EAAEwB,SAAS,CAACE;UAAnC;QADD,CAAD,CAAR;MAGD;IACF,CAPD;;IAQAX,QAAQ,CAACY,aAAT,CAAwB,GAAEzB,aAAc,EAAxC,EAA2CiB,QAA3C,EAAqD;MACnDS,QAAQ,EAAE,QADyC;MAEnDC,IAAI,EAAEpC,KAAK,CAACuB,IAAN,CAAWC,QAAX,CAAoBa,MAApB,CAA2BC;IAFkB,CAArD;EAID,CAfD;;EAiBA,MAAMC,mBAAmB,GAAIC,CAAD,IAAO;IACjC9B,gBAAgB,CAAC8B,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhB;EACD,CAFD;;EAIA,MAAMC,WAAW,GAAIH,CAAD,IAAO;IACzB,IAAIA,CAAC,CAACC,MAAF,CAASG,IAAT,IAAiB,UAArB,EAAiC;MAC/B,IAAIC,QAAQ,GAAG,EAAf;MACAA,QAAQ,GAAG5B,MAAM,CAAC6B,OAAP,CAAeF,IAA1B,CAF+B,CAG/B;;MACA,OAAOG,cAAc,CAACF,QAAD,CAArB;IACD,CALD,MAKO,IAAIL,CAAC,CAACC,MAAF,CAASG,IAAT,IAAiB,UAArB,EAAiC;MACtCC,QAAQ,GAAG3B,MAAM,CAAC4B,OAAP,CAAeF,IAA1B,CADsC,CAEtC;;MACA,OAAOG,cAAc,CAACF,QAAD,CAArB;IACD,CAJM,MAIA,IAAIL,CAAC,CAACC,MAAF,CAASG,IAAT,IAAiB,WAArB,EAAkC;MACvCC,QAAQ,GAAG1B,QAAQ,CAAC2B,OAAT,CAAiBF,IAA5B,CADuC,CAEvC;;MACA,OAAOG,cAAc,CAACF,QAAD,CAArB;IACD,CAJM,MAIA,IAAIL,CAAC,CAACC,MAAF,CAASG,IAAT,IAAiB,YAArB,EAAmC;MACxCC,QAAQ,GAAGzB,OAAO,CAAC0B,OAAR,CAAgBF,IAA3B,CADwC,CAExC;;MACA,OAAOG,cAAc,CAACF,QAAD,CAArB;IACD;EACF,CAnBD;;EAqBA,MAAME,cAAc,GAAIF,QAAD,IAAc;IACnC,MAAMG,EAAE,GAAG,IAAIhD,KAAK,CAACuB,IAAN,CAAWC,QAAX,CAAoByB,MAAxB,EAAX;;IACA,MAAMC,cAAc,GAAG,UAAUC,IAAV,EAAgBvB,MAAhB,EAAwBwB,UAAxB,EAAoC;MACzD,IAAIxB,MAAM,KAAK5B,KAAK,CAACuB,IAAN,CAAWC,QAAX,CAAoBK,MAApB,CAA2BC,EAA1C,EAA8C;QAC5C;QACA;QACA;QACA;QACA;QACA,IAAIjB,OAAO,GAAG,EAAd;;QAEA,KAAK,IAAIwC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACG,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;UACpCxC,OAAO,CAAC0C,IAAR,CAAa;YACXC,QAAQ,EAAE;cACRlD,GAAG,EAAE6C,IAAI,CAACE,CAAD,CAAJ,CAAQrB,CADL;cAERzB,GAAG,EAAE4C,IAAI,CAACE,CAAD,CAAJ,CAAQpB;YAFL,CADC;YAKXwB,OAAO,EAAEN,IAAI,CAACE,CAAD,CAAJ,CAAQK;UALN,CAAb,EADoC,CAQpC;QACD;;QACD5C,UAAU,CAACD,OAAD,CAAV,CAlB4C,CAmB5C;MACD;IACF,CAtBD;;IAuBAmC,EAAE,CAACW,aAAH,CAAiBd,QAAjB,EAA2BK,cAA3B;EACD,CA1BD,CA3Dc,CAuFd;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;;;EAEA,oBACE;IAAA,wBACE;MAAA,wBACE;QAAO,QAAQ,EAAEX;MAAjB;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAQ,WAAW,EAAC,6EAApB;QAAsC,OAAO,EAAElB,SAA/C;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAKE;QAAA,wBACE;UACE,IAAI,EAAC,QADP;UAEE,IAAI,EAAC,wCAFP;UAGE,KAAK,EAAC,cAHR;UAIE,GAAG,EAAEJ,MAJP;UAKE,OAAO,EAAE0B;QALX;UAAA;UAAA;UAAA;QAAA,QADF,eAQE;UACE,IAAI,EAAC,QADP;UAEE,IAAI,EAAC,wCAFP;UAGE,KAAK,EAAC,cAHR;UAIE,GAAG,EAAEzB,MAJP;UAKE,OAAO,EAAEyB;QALX;UAAA;UAAA;UAAA;QAAA,QARF,eAeE;UACE,IAAI,EAAC,QADP;UAEE,IAAI,EAAC,8CAFP;UAGE,KAAK,EAAC,oBAHR;UAIE,GAAG,EAAExB,QAJP;UAKE,OAAO,EAAEwB;QALX;UAAA;UAAA;UAAA;QAAA,QAfF,eAsBE;UACE,IAAI,EAAC,QADP;UAEE,IAAI,EAAC,oDAFP;UAGE,KAAK,EAAC,cAHR;UAIE,GAAG,EAAEvB,OAJP;UAKE,OAAO,EAAEuB;QALX;UAAA;UAAA;UAAA;QAAA,QAtBF;MAAA;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAqCE,QAAC,GAAD,CAAK;IAAL;MACE,MAAM,EAAExC,KAAK,CAACE,MADhB;MAEE,OAAO,EAAEF,KAAK,CAACK,OAFjB;MAGE,KAAK,EAAE;QACL;QACAoD,KAAK,EAAE,MAFF;QAGLC,MAAM,EAAE;MAHH,CAHT;MAQE,KAAK,EAAE,CART;MAAA,UAmBGhD,OAAO,CAACE,GAAR,CAAa+C,MAAD,iBACX,QAAC,SAAD;QAEE,QAAQ,EAAEA,MAAM,CAACN,QAFnB;QAGE,OAAO,EAAE,MAAM5C,OAAO,CAACkD,MAAD,CAHxB;QAAA,UAKGnD,IAAI,IAAIA,IAAI,CAAC8C,OAAL,KAAiBK,MAAM,CAACL,OAAhC,iBACC;UAAK,KAAK,EAAE;YAAEM,KAAK,EAAE;UAAT,CAAZ;UAAA,UAAgCD,MAAM,CAACL;QAAvC;UAAA;UAAA;UAAA;QAAA;MANJ,GACQ,UAASK,MAAM,CAACL,OAAQ,IAAGK,MAAM,CAACN,QAAP,CAAgBlD,GAAI,IAAGwD,MAAM,CAACN,QAAP,CAAgBjD,GAAI,EAD9E;QAAA;QAAA;QAAA;MAAA,QADD;IAnBH;MAAA;MAAA;MAAA;IAAA,QArCF;EAAA,gBADF;AAuED;;GA7LQL,I;;KAAAA,I;AA+LT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}